apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-deploy-dev
spec:
  params:
    - default: main
      name: GIT_BRANCH
      type: string
  tasks:
    # - name: jfrog-push-docker-image
    #   params:
    #     - name: SCRIPT
    #       value: |-
    #         jf dp nvsconsulting.jfrog.io/cicd-demo-container-images/swampup23/jfrog-demo:$(tasks.generate-build-id.results.build-id) --build-name=tekton-build --build-number=$(tasks.generate-build-id.results.build-id)
    #   runAfter:
    #     - xray-scan-docker
    #   taskRef:
    #     kind: Task
    #     name: jfrog-cli
    #   workspaces:
    #     - name: source
    #       workspace: scratch-space
    #     - name: jfrog-apikey
    #       workspace: jfrog-apikey
    #     - name: settings-xml
    #       workspace: settings-xml
    # - name: xray-scan-docker
    #   params:
    #     - name: SCRIPT
    #       value: |-
    #         jf docker scan nvsconsulting.jfrog.io/cicd-demo-container-images/swampup23/jfrog-demo:$(tasks.generate-build-id.results.build-id)
    #   runAfter:
    #     - buildah
    #   taskRef:
    #     kind: Task
    #     name: jfrog-cli
    #   workspaces:
    #     - name: source
    #       workspace: scratch-space
    #     - name: jfrog-apikey
    #       workspace: jfrog-apikey
    #     - name: settings-xml
    #       workspace: settings-xml
    - name: maven-deploy
      params:
        - name: MAVEN_IMAGE
          value: 'docker.io/library/maven:3.9.1-eclipse-temurin'
        - name: GOALS
          value:
            - deploy
        - name: MAVEN_MIRROR_URL
          value: ''
        - name: SERVER_USER
          value: ''
        - name: SERVER_PASSWORD
          value: ''
        - name: PROXY_USER
          value: ''
        - name: PROXY_PASSWORD
          value: ''
        - name: PROXY_PORT
          value: ''
        - name: PROXY_HOST
          value: ''
        - name: PROXY_NON_PROXY_HOSTS
          value: ''
        - name: PROXY_PROTOCOL
          value: http
        - name: CONTEXT_DIR
          value: .
      runAfter:
        - xray-scan
      taskRef:
        kind: ClusterTask
        name: maven
      workspaces:
        - name: source
          workspace: scratch-space
        - name: maven-settings
          workspace: settings-xml
    - name: xray-scan
      params:
        - name: SCRIPT
          value: |-
            pwd
            ls -lath
            ls -lath ./target
            jf scan ./target/*.jar
      runAfter:
        - maven-package
      taskRef:
        kind: Task
        name: jfrog-cli
      workspaces:
        - name: source
          workspace: scratch-space
        - name: jfrog-apikey
          workspace: jfrog-apikey
        - name: settings-xml
          workspace: settings-xml
    - name: maven-package
      params:
        - name: MAVEN_IMAGE
          value: 'docker.io/library/maven:3.9.1-eclipse-temurin'
        - name: GOALS
          value:
            - clean
            - package
        - name: MAVEN_MIRROR_URL
          value: ''
        - name: SERVER_USER
          value: ''
        - name: SERVER_PASSWORD
          value: ''
        - name: PROXY_USER
          value: ''
        - name: PROXY_PASSWORD
          value: ''
        - name: PROXY_PORT
          value: ''
        - name: PROXY_HOST
          value: ''
        - name: PROXY_NON_PROXY_HOSTS
          value: ''
        - name: PROXY_PROTOCOL
          value: http
        - name: CONTEXT_DIR
          value: .
      runAfter:
        - generate-build-id
      taskRef:
        kind: ClusterTask
        name: maven
      workspaces:
        - name: source
          workspace: scratch-space
        - name: maven-settings
          workspace: settings-xml
    - name: git-clone
      params:
        - name: url
          value: 'git@github.com:JairoLedezma/JFrog_CICD_Demo.git'
        - name: revision
          value: $(params.GIT_BRANCH)
        - name: refspec
          value: ''
        - name: submodules
          value: 'true'
        - name: depth
          value: '0'
        - name: sslVerify
          value: 'true'
        - name: crtFileName
          value: ca-bundle.crt
        - name: subdirectory
          value: ''
        - name: sparseCheckoutDirectories
          value: ''
        - name: deleteExisting
          value: 'true'
        - name: httpProxy
          value: ''
        - name: httpsProxy
          value: ''
        - name: noProxy
          value: ''
        - name: verbose
          value: 'true'
        - name: gitInitImage
          value: >-
            registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:6c3980b3d28c8fb92b17466f5654d5f484ab893f1673ec8f29e49c0d03f8aca9
        - name: userHome
          value: /tekton/home
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: scratch-space
        - name: ssh-directory
          workspace: git-ssh-key
    - name: buildah
      params:
        - name: IMAGE
          value: >-
            nvsswampup.jfrog.io/artifactory/swamp-up-24-docker/jfrog-demo:$(tasks.generate-build-id.results.build-id)
        - name: BUILDER_IMAGE
          value: >-
            registry.redhat.io/rhel8/buildah@sha256:ac0b8714cc260c94435cab46fe41b3de0ccbc3d93e38c395fa9d52ac49e521fe
        - name: STORAGE_DRIVER
          value: vfs
        - name: DOCKERFILE
          value: ./Dockerfile
        - name: CONTEXT
          value: .
        - name: TLSVERIFY
          value: 'true'
        - name: FORMAT
          value: oci
        - name: BUILD_EXTRA_ARGS
          value: ''
        - name: PUSH_EXTRA_ARGS
          value: ''
        - name: SKIP_PUSH
          value: 'false'
      runAfter:
        - maven-deploy
      taskRef:
        kind: ClusterTask
        name: buildah
      workspaces:
        - name: source
          workspace: scratch-space
        - name: dockerconfig
    - name: get-maven-version
      params:
        - name: CONTEXT_DIR
          value: .
      runAfter:
        - git-clone
      taskRef:
        kind: Task
        name: get-maven-version
      workspaces:
        - name: maven-settings
          workspace: settings-xml
        - name: source
          workspace: scratch-space
    - name: generate-build-id
      params:
        - name: base-version
          value: $(tasks.get-maven-version.results.project-version)
      runAfter:
        - get-maven-version
      taskRef:
        kind: Task
        name: generate-build-id
  workspaces:
    - name: scratch-space
    - name: dockerconfig
    - name: settings-xml
    - name: git-ssh-key
    - name: jfrog-apikey